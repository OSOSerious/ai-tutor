name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint || true

      - name: Run TypeScript type checking
        run: npm run typecheck || true

      - name: Run tests
        run: npm test || true
        env:
          CI: true

      - name: Build project
        run: npm run build
        env:
          VITE_APP_VERSION: ${{ github.sha }}
          VITE_APP_BUILD_TIME: ${{ steps.current-time.outputs.time }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./dist

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Discord notification
        if: always()
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: info
          description: |
            Deployment to GitHub Pages
            Status: ${{ job.status }}
            URL: ${{ steps.deployment.outputs.page_url }}
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

  audit:
    needs: deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Security audit
        run: |
          npm audit
          
      - name: Lighthouse CI
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: |
            ${{ needs.deploy.outputs.page_url }}
          uploadArtifacts: true
          temporaryPublicStorage: true
          
      - name: Check broken links
        uses: ruzickap/action-my-broken-link-checker@v2
        with:
          url: ${{ needs.deploy.outputs.page_url }}
          cmd_params: "--buffer-size=8192 --max-connections=10"
